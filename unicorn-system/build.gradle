/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'com.lwohvye.java-conventions'
    id 'extra-java-module-info'
    id 'signing'
}

description = '权限管理模块'

java {
    withJavadocJar()
    registerFeature('captcha') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('businessLog') {
        usingSourceSet(sourceSets.main)
    }
}

jar {
    enabled = true // separates boot jar from normal jar
    manifest {
        from sharedManifest
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Automatic-Module-Name": "lwohvye." + project.name.replace("-", ".")
        )
    }
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenPublication }
        rename ".*", "pom.xml"
    }
}

dependencies {
    api project(':unicorn-sys-api')
    api('org.springframework.boot:spring-boot-starter-websocket') {
        exclude(group: 'org.springframework.boot', module: "spring-boot-starter-tomcat")
    }
    api "io.jsonwebtoken:jjwt-api:$jjwtVersion"
    api "io.jsonwebtoken:jjwt-impl:$jjwtVersion"
    api "io.jsonwebtoken:jjwt-jackson:$jjwtVersion"
    api "org.quartz-scheduler:quartz:$quartzVersion"
    api "com.github.whvcse:easy-captcha:$easyCaptchaVersion"
    captchaImplementation "com.lwohvye.captcha:captcha-spring-boot-starter:$captchaVersion"
    api "ch.ethz.ganymed:ganymed-ssh2:262"
    api 'com.jcraft:jsch:0.1.55'
    api "com.github.oshi:oshi-core:$oshiCoreVersion"
    api "ch.qos.logback:logback-access:$logbackVersion"
    api 'org.openjdk.jol:jol-core:0.16'
    businessLogImplementation "io.github.mouzt:bizlog-sdk:$bizlogVersion"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
}

extraJavaModuleInfo {
    automaticModule("bizlog-sdk-${bizlogVersion}.jar", 'com.mzt.logapi')
    automaticModule("easy-captcha-${easyCaptchaVersion}.jar", 'com.wf.captcha')
    automaticModule("ganymed-ssh2-262.jar", 'ch.ethz.ssh2')
    automaticModule("hutool-all-${hutoolVersion}.jar", 'cn.hutool')
    automaticModule("jjwt-api-${jjwtVersion}.jar", 'io.jsonwebtoken.api')
    automaticModule("jjwt-impl-${jjwtVersion}.jar", 'io.jsonwebtoken.impl')
    automaticModule("jjwt-jackson-${jjwtVersion}.jar", 'io.jsonwebtoken.jackson')
    automaticModule("jsch-0.1.55.jar", 'com.jcraft.jsch')
    automaticModule("mapstruct-spring-extensions-${mapstructSpringVersion}.jar", 'org.mapstruct.extensions.spring')
    automaticModule("quartz-${quartzVersion}.jar", 'org.quartz')
    automaticModule("redisson-${redissonVersion}.jar", 'org.redisson')
    automaticModule("spring-retry-${springretryVersion}.jar", 'spring.retry')
    automaticModule("thumbnailator-${thumbnailatorVersion}.jar", 'net.coobird.thumbnailator')
}
