plugins {
    id 'com.lwohvye.java-conventions'
    id 'extra-java-module-info' // apply my own plugin written in buildSrc
//    id 'org.springframework.boot'
}

dependencies {
    implementation project(':unicorn-system')
    implementation project(':unicorn-logging')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnlyApi "org.projectlombok:lombok:${lombokVersion}"
    compileOnlyApi "org.mapstruct:mapstruct-processor:$mapstructVersion"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

extraJavaModuleInfo {
    automaticModule("bizlog-sdk-${bizlogVersion}.jar", 'com.mzt.logapi')
    automaticModule("easy-captcha-${easyCaptchaVersion}.jar", 'com.wf.captcha')
    automaticModule("ganymed-ssh2-262.jar", 'ch.ethz.ssh2')
    automaticModule("hutool-all-${hutoolVersion}.jar", 'cn.hutool')
    automaticModule("jjwt-api-${jjwtVersion}.jar", 'io.jsonwebtoken.api')
    automaticModule("jjwt-impl-${jjwtVersion}.jar", 'io.jsonwebtoken.impl')
    automaticModule("jjwt-jackson-${jjwtVersion}.jar", 'io.jsonwebtoken.jackson')
    automaticModule("jsch-0.1.55.jar", 'com.jcraft.jsch')
    automaticModule("mapstruct-spring-extensions-${mapstructSpringVersion}.jar", 'org.mapstruct.extensions.spring')
    automaticModule("quartz-${quartzVersion}.jar", 'org.quartz')
    automaticModule("redisson-${redissonVersion}.jar", 'org.redisson')
    automaticModule("spring-retry-${springretryVersion}.jar", 'spring.retry')
    automaticModule("thumbnailator-${thumbnailatorVersion}.jar", 'net.coobird.thumbnailator')
    module('jakarta.mail-1.0.0.jar', 'jakarta.mail', '1.0.0', true) {
        uses('jakarta.mail.util.StreamProvider')
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
